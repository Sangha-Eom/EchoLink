/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.9/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`
    
    // Spring Boot 플러그인
    id("org.springframework.boot") version "3.5.4"
    id("io.spring.dependency-management") version "1.1.7"
	
    // UI 프레임워크 (JavaFX)
    id("org.openjfx.javafxplugin") version "0.1.0"
	
    // native 설치 파일(.exe) 생성을 위한 jpackage 플러그인
    id("org.beryx.jlink") version "3.0.1"
}

// JavaFX 설정 블록
javafx {
    version = "21"
    modules = listOf("javafx.controls", "javafx.fxml")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // 기본 라이브러리
    api(libs.commons.math3)
    implementation(libs.guava)

    // 스트리밍 영상 (JavaCV, FFmpeg)
    implementation("org.bytedeco:javacv-platform:1.5.9")
    implementation("org.bytedeco:ffmpeg-platform:5.1.2-1.5.9")

    // 데이터 교환용 (JSON)
    implementation("org.json:json:20240303")
	
    // Spring Boot 관련 라이브러리
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa") // 데이터베이스 연동
    runtimeOnly("com.h2database:h2") // 개발용 인메모리 데이터베이스
    implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
	
    // JWT (JSON Web Token) 라이브러리 (버전 통일)
    implementation("io.jsonwebtoken:jjwt-api:0.12.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.12.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.12.5")
	
    // 로깅 (Logback)
    implementation("org.slf4j:slf4j-api:2.0.13")
    runtimeOnly("ch.qos.logback:logback-classic:1.5.6")
	
    // YAML 파일 파싱 (SnakeYAML)
    implementation("org.yaml:snakeyaml:2.2")

    // 테스트용 라이브러리
    testImplementation(libs.junit.jupiter)
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.security:spring-security-test")
    
    // 사용자 정보 저장 데이터베이스(Firebase)
    implementation("com.google.firebase:firebase-admin:9.2.0")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
