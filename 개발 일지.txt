### 일지
~~
25.08.27
- 보안 관련 하드코딩 구현 수정하기(applicaton.yml 통합)
- 기기 등록 구현 코드
- 데스크탑(Server) 어플로 전환(.exe) <Ongoing>
ㄴ JavaFX

다음 단계: Gemini Pro 단계별 어플 전환
- 데스크탑(Server) 어플로 전환(.exe)

~~
25.08.28
- 데스크탑 어플로 전환(.exe) 미완
ㄴ 서버와 인증서버 한 번에 실행하도록 구조 개편
ㄴ 나중에 해야할 사항 
  ㄴ 2단계: Fat JAR 빌드(사지방 CMD 이슈)
  ㄴ 4단계: 네이티브 빌드(.exe) (사지방CMD 이슈)

다음 단계: Gemini Pro 단계별 로그인 구조 변환
- Parsec과 같이 GUI를 통한 로그인 인증 창 구현 중 4항목

~~
25.08.29
- GUI를 통한 로그인 인증 창 구현 완료
 단 임시로 소설로그인 구현 중단 후 테스트용 데이터베이스 구현 완료
ㄴ> FireBase와 FireStore이용하여 영구 사용자 정보 기억 및 구글 소설 로그인 재구현

다음 단계: Gemini Pro 단계별 소설 로그인 사용자 관리 구현

~~
25.08.31
- 소설 로그인으로 전환 완료(Firebase 데이터베이스 사용)

다음 단계: 
1. 서버 코드 올리기
2. Gemini pro 단계 중 LoginController.java 오류 수정
3. 표준적인 Firebase Custom Token 방식으로 전환


~~
25.09.01
표준적인 Firebase Custom Token 방식으로 전환

다음 단계:
1. 깃허브 서버 코드 올리기
2. 새로운 채팅으로 넘어가기(요약본 요청 후)
3. 로그인 성공 후의 메인 화면 기능을 구체화

~~
25.09.02
1. GPU 탐색 후 우선 코덱 설정
2. 전송 프로토컬 UDP 대체 SRP 프로토컬 도입
3. 보안 강화 ( application.yml 우선 순위 뒤로 미루기)
4. 동적 비트레이트 보완
5. 저지연 옵션 인코더 옵션 활성화
6. 오래된 큐 버리기 로직 구현(FPS 유지)
7. FPS 유지 ms -> ns 지연 시간 최소화


다음 단계:
1. 로그인 성공 후의 메인 화면 기능을 구체화
2. 보안 강화: 서버의 Refresh Token 구현
3. 보안 강화: API 문서화 ( 추후 )

~~
25.09.03
1. 로그인 성공 후의 메인 화면 기능을 구체화
2. 보안 강화: 서버의 Refresh Token 구현
3. FxApplication.java 역할 분리: GUI와 비즈니스 로직 분리

다음 단계:
1. API 주소 권한 없음 수정: http://localhost:8080/swagger-ui.html
2. 로그인 완료 시 폰트 깨짐 현상 해결

~~
25.09.05
로그인 인증 토큰 오류 해결 중

다음 단계:
1. 로그인 인증 토큰 오류 해결 (Google Gemini -> Google Console, Firebase)
2. API 주소 권한 없음 수정: http://localhost:8080/swagger-ui.html
3. 로그인 완료 시 폰트 깨짐 현상 해결

~~
25.09.06
로그인 인증 토큰 오류 (해결 완료)
ㄴFirebase, Google Console 해결 완료
ㄴFirebase 새로운 사용자 로직 구현 및 추가 완료
ㄴ폰트 깨짐 현상 해결
=> 로그인 구현 완료

다음 단계:
1. 데스크톱 GUI 메인 화면 기능 구체화 (MainView.fxml)
2. API 문서화 (Swagger 오류 해결) -> http://localhost:8080/swagger-ui.html
3. 보안
  2.1 보안 파일(applicaton.yml 외 2개) 외부 파일 설정(--spring.config.location)
  2.2 환경 변수 사용(ServerConfig.java)

